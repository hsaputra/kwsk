dist: trusty
sudo: required

language: go

# This moves Kubernetes specific config files.
env:
  global:
  - CHANGE_MINIKUBE_NONE_USER=true
matrix:
  include:
  # - name: "Whisk Action Tests"
  #   env: TESTS="system.basic.WskAction*"
  - name: "Whisk Basic Rest Tests"
    env: TESTS="system.basic.WskRest*"

before_install:
- sudo apt-get update -qq
- curl -L -s https://github.com/golang/dep/releases/download/v0.4.1/dep-linux-amd64 -o $GOPATH/bin/dep
- chmod +x $GOPATH/bin/dep

install:
# Make root mounted as rshared to fix kube-dns issues.
- sudo mount --make-rshared /
# Download kubectl, which is a requirement for using minikube.
- curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.10.4/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
# Download minikube.
- curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.28.2/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
# Run it
- sudo ./test/bin/minikube-start.sh
# Fix the kubectl context, as it's often stale.
- minikube update-context
# Wait for Kubernetes to be up and ready.
- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done
# Fetch go deps
- dep ensure
# Install and configure knative
- ./test/bin/knative-install.sh

script:
- ./test/bin/integs.sh

after_failure:
- echo "************* FAILURE *************"
- cat kwsk.log

