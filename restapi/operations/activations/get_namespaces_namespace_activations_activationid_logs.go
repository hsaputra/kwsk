// Code generated by go-swagger; DO NOT EDIT.

package activations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetNamespacesNamespaceActivationsActivationidLogsHandlerFunc turns a function with the right signature into a get namespaces namespace activations activationid logs handler
type GetNamespacesNamespaceActivationsActivationidLogsHandlerFunc func(GetNamespacesNamespaceActivationsActivationidLogsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetNamespacesNamespaceActivationsActivationidLogsHandlerFunc) Handle(params GetNamespacesNamespaceActivationsActivationidLogsParams) middleware.Responder {
	return fn(params)
}

// GetNamespacesNamespaceActivationsActivationidLogsHandler interface for that can handle valid get namespaces namespace activations activationid logs params
type GetNamespacesNamespaceActivationsActivationidLogsHandler interface {
	Handle(GetNamespacesNamespaceActivationsActivationidLogsParams) middleware.Responder
}

// NewGetNamespacesNamespaceActivationsActivationidLogs creates a new http.Handler for the get namespaces namespace activations activationid logs operation
func NewGetNamespacesNamespaceActivationsActivationidLogs(ctx *middleware.Context, handler GetNamespacesNamespaceActivationsActivationidLogsHandler) *GetNamespacesNamespaceActivationsActivationidLogs {
	return &GetNamespacesNamespaceActivationsActivationidLogs{Context: ctx, Handler: handler}
}

/*GetNamespacesNamespaceActivationsActivationidLogs swagger:route GET /namespaces/{namespace}/activations/{activationid}/logs Activations getNamespacesNamespaceActivationsActivationidLogs

Get the logs for an activation

Get activation logs information.

*/
type GetNamespacesNamespaceActivationsActivationidLogs struct {
	Context *middleware.Context
	Handler GetNamespacesNamespaceActivationsActivationidLogsHandler
}

func (o *GetNamespacesNamespaceActivationsActivationidLogs) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetNamespacesNamespaceActivationsActivationidLogsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
