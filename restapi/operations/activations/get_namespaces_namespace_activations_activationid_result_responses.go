// Code generated by go-swagger; DO NOT EDIT.

package activations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/projectodd/kwsk/models"
)

// GetNamespacesNamespaceActivationsActivationidResultOKCode is the HTTP code returned for type GetNamespacesNamespaceActivationsActivationidResultOK
const GetNamespacesNamespaceActivationsActivationidResultOKCode int = 200

/*GetNamespacesNamespaceActivationsActivationidResultOK Return output

swagger:response getNamespacesNamespaceActivationsActivationidResultOK
*/
type GetNamespacesNamespaceActivationsActivationidResultOK struct {

	/*
	  In: Body
	*/
	Payload *models.ActivationResult `json:"body,omitempty"`
}

// NewGetNamespacesNamespaceActivationsActivationidResultOK creates GetNamespacesNamespaceActivationsActivationidResultOK with default headers values
func NewGetNamespacesNamespaceActivationsActivationidResultOK() *GetNamespacesNamespaceActivationsActivationidResultOK {

	return &GetNamespacesNamespaceActivationsActivationidResultOK{}
}

// WithPayload adds the payload to the get namespaces namespace activations activationid result o k response
func (o *GetNamespacesNamespaceActivationsActivationidResultOK) WithPayload(payload *models.ActivationResult) *GetNamespacesNamespaceActivationsActivationidResultOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get namespaces namespace activations activationid result o k response
func (o *GetNamespacesNamespaceActivationsActivationidResultOK) SetPayload(payload *models.ActivationResult) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNamespacesNamespaceActivationsActivationidResultOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetNamespacesNamespaceActivationsActivationidResultUnauthorizedCode is the HTTP code returned for type GetNamespacesNamespaceActivationsActivationidResultUnauthorized
const GetNamespacesNamespaceActivationsActivationidResultUnauthorizedCode int = 401

/*GetNamespacesNamespaceActivationsActivationidResultUnauthorized Unauthorized request

swagger:response getNamespacesNamespaceActivationsActivationidResultUnauthorized
*/
type GetNamespacesNamespaceActivationsActivationidResultUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewGetNamespacesNamespaceActivationsActivationidResultUnauthorized creates GetNamespacesNamespaceActivationsActivationidResultUnauthorized with default headers values
func NewGetNamespacesNamespaceActivationsActivationidResultUnauthorized() *GetNamespacesNamespaceActivationsActivationidResultUnauthorized {

	return &GetNamespacesNamespaceActivationsActivationidResultUnauthorized{}
}

// WithPayload adds the payload to the get namespaces namespace activations activationid result unauthorized response
func (o *GetNamespacesNamespaceActivationsActivationidResultUnauthorized) WithPayload(payload *models.ErrorMessage) *GetNamespacesNamespaceActivationsActivationidResultUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get namespaces namespace activations activationid result unauthorized response
func (o *GetNamespacesNamespaceActivationsActivationidResultUnauthorized) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNamespacesNamespaceActivationsActivationidResultUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetNamespacesNamespaceActivationsActivationidResultNotFoundCode is the HTTP code returned for type GetNamespacesNamespaceActivationsActivationidResultNotFound
const GetNamespacesNamespaceActivationsActivationidResultNotFoundCode int = 404

/*GetNamespacesNamespaceActivationsActivationidResultNotFound Item not found

swagger:response getNamespacesNamespaceActivationsActivationidResultNotFound
*/
type GetNamespacesNamespaceActivationsActivationidResultNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewGetNamespacesNamespaceActivationsActivationidResultNotFound creates GetNamespacesNamespaceActivationsActivationidResultNotFound with default headers values
func NewGetNamespacesNamespaceActivationsActivationidResultNotFound() *GetNamespacesNamespaceActivationsActivationidResultNotFound {

	return &GetNamespacesNamespaceActivationsActivationidResultNotFound{}
}

// WithPayload adds the payload to the get namespaces namespace activations activationid result not found response
func (o *GetNamespacesNamespaceActivationsActivationidResultNotFound) WithPayload(payload *models.ErrorMessage) *GetNamespacesNamespaceActivationsActivationidResultNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get namespaces namespace activations activationid result not found response
func (o *GetNamespacesNamespaceActivationsActivationidResultNotFound) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNamespacesNamespaceActivationsActivationidResultNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetNamespacesNamespaceActivationsActivationidResultInternalServerErrorCode is the HTTP code returned for type GetNamespacesNamespaceActivationsActivationidResultInternalServerError
const GetNamespacesNamespaceActivationsActivationidResultInternalServerErrorCode int = 500

/*GetNamespacesNamespaceActivationsActivationidResultInternalServerError Server error

swagger:response getNamespacesNamespaceActivationsActivationidResultInternalServerError
*/
type GetNamespacesNamespaceActivationsActivationidResultInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewGetNamespacesNamespaceActivationsActivationidResultInternalServerError creates GetNamespacesNamespaceActivationsActivationidResultInternalServerError with default headers values
func NewGetNamespacesNamespaceActivationsActivationidResultInternalServerError() *GetNamespacesNamespaceActivationsActivationidResultInternalServerError {

	return &GetNamespacesNamespaceActivationsActivationidResultInternalServerError{}
}

// WithPayload adds the payload to the get namespaces namespace activations activationid result internal server error response
func (o *GetNamespacesNamespaceActivationsActivationidResultInternalServerError) WithPayload(payload *models.ErrorMessage) *GetNamespacesNamespaceActivationsActivationidResultInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get namespaces namespace activations activationid result internal server error response
func (o *GetNamespacesNamespaceActivationsActivationidResultInternalServerError) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNamespacesNamespaceActivationsActivationidResultInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
